"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mysten+wallet-kit-core@0.6.14";
exports.ids = ["vendor-chunks/@mysten+wallet-kit-core@0.6.14"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@mysten+wallet-kit-core@0.6.14/node_modules/@mysten/wallet-kit-core/dist/index.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@mysten+wallet-kit-core@0.6.14/node_modules/@mysten/wallet-kit-core/dist/index.mjs ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_FEATURES: () => (/* binding */ DEFAULT_FEATURES),\n/* harmony export */   WalletKitCoreConnectionStatus: () => (/* binding */ WalletKitCoreConnectionStatus),\n/* harmony export */   createWalletKitCore: () => (/* binding */ createWalletKitCore),\n/* harmony export */   localStorageAdapter: () => (/* binding */ localStorageAdapter),\n/* harmony export */   noopStorageAdapter: () => (/* binding */ noopStorageAdapter)\n/* harmony export */ });\n/* harmony import */ var _mysten_wallet_standard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mysten/wallet-standard */ \"(ssr)/./node_modules/.pnpm/@mysten+wallet-standard@0.8.11/node_modules/@mysten/wallet-standard/dist/index.mjs\");\n/* harmony import */ var _mysten_wallet_standard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/wallet-standard */ \"(ssr)/./node_modules/.pnpm/@wallet-standard+app@1.1.0/node_modules/@wallet-standard/app/lib/esm/wallets.js\");\n// src/index.ts\n\n\n// src/storage.ts\nvar localStorageAdapter = {\n  async set(key, value) {\n    return localStorage.setItem(key, value);\n  },\n  async get(key) {\n    return localStorage.getItem(key);\n  },\n  async del(key) {\n    localStorage.removeItem(key);\n  }\n};\nvar noopStorageAdapter = {\n  async set() {\n  },\n  async get() {\n    return null;\n  },\n  async del() {\n  }\n};\n\n// src/index.ts\nvar DEFAULT_FEATURES = [\n  \"sui:signAndExecuteTransactionBlock\"\n];\nvar WalletKitCoreConnectionStatus = /* @__PURE__ */ ((WalletKitCoreConnectionStatus2) => {\n  WalletKitCoreConnectionStatus2[\"DISCONNECTED\"] = \"DISCONNECTED\";\n  WalletKitCoreConnectionStatus2[\"CONNECTING\"] = \"CONNECTING\";\n  WalletKitCoreConnectionStatus2[\"CONNECTED\"] = \"CONNECTED\";\n  WalletKitCoreConnectionStatus2[\"ERROR\"] = \"ERROR\";\n  return WalletKitCoreConnectionStatus2;\n})(WalletKitCoreConnectionStatus || {});\nvar SUI_WALLET_NAME = \"Sui Wallet\";\nvar RECENT_WALLET_STORAGE = \"wallet-kit:last-wallet\";\nfunction waitToBeVisible() {\n  if (!document || document.visibilityState === \"visible\") {\n    return Promise.resolve();\n  }\n  let promiseResolve = null;\n  const promise = new Promise((r) => promiseResolve = r);\n  const callback = () => {\n    if (promiseResolve && document.visibilityState === \"visible\") {\n      promiseResolve();\n      document.removeEventListener(\"visibilitychange\", callback);\n    }\n  };\n  document.addEventListener(\"visibilitychange\", callback);\n  return promise;\n}\nfunction sortWallets(wallets, preferredWallets, features) {\n  const suiWallets = wallets.filter(\n    (wallet) => (0,_mysten_wallet_standard__WEBPACK_IMPORTED_MODULE_0__.isWalletWithSuiFeatures)(wallet, features)\n  );\n  return [\n    // Preferred wallets, in order:\n    ...preferredWallets.map((name) => suiWallets.find((wallet) => wallet.name === name)).filter(Boolean),\n    // Wallets in default order:\n    ...suiWallets.filter((wallet) => !preferredWallets.includes(wallet.name))\n  ];\n}\nfunction createWalletKitCore({\n  preferredWallets = [SUI_WALLET_NAME],\n  storageAdapter = localStorageAdapter,\n  storageKey = RECENT_WALLET_STORAGE,\n  features = DEFAULT_FEATURES\n}) {\n  const registeredWallets = (0,_mysten_wallet_standard__WEBPACK_IMPORTED_MODULE_1__.getWallets)();\n  let wallets = registeredWallets.get();\n  const subscriptions = /* @__PURE__ */ new Set();\n  let walletEventUnsubscribe = null;\n  let internalState = {\n    accounts: [],\n    currentAccount: null,\n    wallets: sortWallets(wallets, preferredWallets, features),\n    currentWallet: null,\n    status: \"DISCONNECTED\" /* DISCONNECTED */\n  };\n  const computeState = () => ({\n    ...internalState,\n    isConnecting: internalState.status === \"CONNECTING\" /* CONNECTING */,\n    isConnected: internalState.status === \"CONNECTED\" /* CONNECTED */,\n    isError: internalState.status === \"ERROR\" /* ERROR */\n  });\n  let state = computeState();\n  function setState(nextInternalState) {\n    internalState = {\n      ...internalState,\n      ...nextInternalState\n    };\n    state = computeState();\n    subscriptions.forEach((handler) => {\n      try {\n        handler(state);\n      } catch {\n      }\n    });\n  }\n  function disconnected() {\n    if (walletEventUnsubscribe) {\n      walletEventUnsubscribe();\n      walletEventUnsubscribe = null;\n    }\n    setState({\n      status: \"DISCONNECTED\" /* DISCONNECTED */,\n      accounts: [],\n      currentAccount: null,\n      currentWallet: null\n    });\n  }\n  const handleWalletsChanged = () => {\n    setState({\n      wallets: sortWallets(registeredWallets.get(), preferredWallets, features)\n    });\n  };\n  registeredWallets.on(\"register\", handleWalletsChanged);\n  registeredWallets.on(\"unregister\", handleWalletsChanged);\n  const walletKit = {\n    async autoconnect() {\n      if (state.currentWallet)\n        return;\n      await waitToBeVisible();\n      try {\n        const lastWalletName = await storageAdapter.get(storageKey);\n        if (lastWalletName) {\n          walletKit.connect(lastWalletName, { silent: true });\n        }\n      } catch {\n      }\n    },\n    getState() {\n      return state;\n    },\n    subscribe(handler) {\n      subscriptions.add(handler);\n      try {\n        handler(state);\n      } catch {\n      }\n      return () => {\n        subscriptions.delete(handler);\n      };\n    },\n    selectAccount(account) {\n      if (account === internalState.currentAccount || !internalState.accounts.includes(account)) {\n        return;\n      }\n      setState({\n        currentAccount: account\n      });\n    },\n    async connect(walletName, connectInput) {\n      const currentWallet = internalState.wallets.find((wallet) => wallet.name === walletName) ?? null;\n      setState({ currentWallet });\n      if (currentWallet) {\n        if (walletEventUnsubscribe) {\n          walletEventUnsubscribe();\n        }\n        walletEventUnsubscribe = currentWallet.features[\"standard:events\"].on(\n          \"change\",\n          ({ accounts, features: features2, chains }) => {\n            if (accounts) {\n              setState({\n                accounts,\n                currentAccount: internalState.currentAccount && !accounts.find(({ address }) => address === internalState.currentAccount?.address) ? accounts[0] : internalState.currentAccount\n              });\n            }\n          }\n        );\n        try {\n          setState({ status: \"CONNECTING\" /* CONNECTING */ });\n          await currentWallet.features[\"standard:connect\"].connect(connectInput);\n          setState({ status: \"CONNECTED\" /* CONNECTED */ });\n          try {\n            await storageAdapter.set(storageKey, currentWallet.name);\n          } catch {\n          }\n          setState({\n            accounts: currentWallet.accounts,\n            currentAccount: currentWallet.accounts[0] ?? null\n          });\n        } catch (e) {\n          console.log(\"Wallet connection error\", e);\n          setState({ status: \"ERROR\" /* ERROR */ });\n        }\n      } else {\n        setState({ status: \"DISCONNECTED\" /* DISCONNECTED */ });\n      }\n    },\n    async disconnect() {\n      if (!internalState.currentWallet) {\n        console.warn(\"Attempted to `disconnect` but no wallet was connected.\");\n        return;\n      }\n      try {\n        await storageAdapter.del(storageKey);\n      } catch {\n      }\n      await internalState.currentWallet.features[\"standard:disconnect\"]?.disconnect();\n      disconnected();\n    },\n    /** @deprecated Use `signPersonalMessage` instead. */\n    signMessage(messageInput) {\n      if (!internalState.currentWallet || !internalState.currentAccount) {\n        throw new Error(\"No wallet is currently connected, cannot call `signMessage`.\");\n      }\n      if (!internalState.currentWallet.features[\"sui:signMessage\"]) {\n        throw new Error(\"Wallet does not support deprecated `signMessage` method.\");\n      }\n      return internalState.currentWallet.features[\"sui:signMessage\"].signMessage({\n        ...messageInput,\n        account: messageInput.account ?? internalState.currentAccount\n      });\n    },\n    signPersonalMessage(messageInput) {\n      if (!internalState.currentWallet || !internalState.currentAccount) {\n        throw new Error(\"No wallet is currently connected, cannot call `signPersonalMessage`.\");\n      }\n      if (!internalState.currentWallet.features[\"sui:signPersonalMessage\"]) {\n        throw new Error(\"Wallet does not support the new `signPersonalMessage` method.\");\n      }\n      return internalState.currentWallet.features[\"sui:signPersonalMessage\"].signPersonalMessage({\n        ...messageInput,\n        account: messageInput.account ?? internalState.currentAccount\n      });\n    },\n    async signTransactionBlock(transactionInput) {\n      if (!internalState.currentWallet || !internalState.currentAccount) {\n        throw new Error(\"No wallet is currently connected, cannot call `signTransaction`.\");\n      }\n      const {\n        account = internalState.currentAccount,\n        chain = internalState.currentAccount.chains[0]\n      } = transactionInput;\n      if (!chain) {\n        throw new Error(\"Missing chain\");\n      }\n      return internalState.currentWallet.features[\"sui:signTransactionBlock\"].signTransactionBlock({\n        ...transactionInput,\n        account,\n        chain\n      });\n    },\n    async signAndExecuteTransactionBlock(transactionInput) {\n      if (!internalState.currentWallet || !internalState.currentAccount) {\n        throw new Error(\n          \"No wallet is currently connected, cannot call `signAndExecuteTransactionBlock`.\"\n        );\n      }\n      const {\n        account = internalState.currentAccount,\n        chain = internalState.currentAccount.chains[0]\n      } = transactionInput;\n      if (!chain) {\n        throw new Error(\"Missing chain\");\n      }\n      return internalState.currentWallet.features[\"sui:signAndExecuteTransactionBlock\"].signAndExecuteTransactionBlock({\n        ...transactionInput,\n        account,\n        chain\n      });\n    }\n  };\n  return walletKit;\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@mysten+wallet-kit-core@0.6.14/node_modules/@mysten/wallet-kit-core/dist/index.mjs\n");

/***/ })

};
;